from instagrapi import Client
from instagrapi.types import UserShort
import time
import logging
import json
import os

# –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –ª–æ–≥—É–≤–∞–Ω–Ω—è
logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

# –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –∫–ª—ñ—î–Ω—Ç–∞ Instagram
cl = Client()

# –§–∞–π–ª –¥–ª—è –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è –æ–±—Ä–æ–±–ª–µ–Ω–∏—Ö –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤
PROCESSED_FILE = "processed_users.json"

# –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –∞–±–æ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –æ–±—Ä–æ–±–ª–µ–Ω–∏—Ö –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤
def load_processed_users():
    if os.path.exists(PROCESSED_FILE):
        with open(PROCESSED_FILE, 'r') as f:
            data = json.load(f)
            return set(data.get('followers', [])), set(data.get('likers', []))
    return set(), set()

# –ó–±–µ—Ä–µ–∂–µ–Ω–Ω—è –æ–±—Ä–æ–±–ª–µ–Ω–∏—Ö –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤
def save_processed_users(followers, likers):
    with open(PROCESSED_FILE, 'w') as f:
        json.dump({'followers': list(followers), 'likers': list(likers)}, f)

# –ü–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è (–æ–¥–Ω–µ –¥–ª—è –æ–±–æ—Ö –≤–∏–ø–∞–¥–∫—ñ–≤)
MESSAGE = """–®—É–∫–∞—î—à —Å—É—á–∞—Å–Ω–∏–π, –∞–¥–∞–ø—Ç–∏–≤–Ω–∏–π —Ç–∞ —ñ–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–∏–π –≤–µ–±-—Å–∞–π—Ç? –ú—ñ–π –±–æ—Ç –Ω–∞ –∑–≤‚Äô—è–∑–∫—É! üöÄ

–Ø, MykyWEB, —Å—Ç–≤–æ—Ä—é—é –≤–µ–±-–ø—Ä–æ–¥—É–∫—Ç–∏, —è–∫—ñ –≤—Ä–∞–∂–∞—é—Ç—å:
üåê **HTML** ‚Äî —á—ñ—Ç–∫–∞ —Ç–∞ —Å–µ–º–∞–Ω—Ç–∏—á–Ω–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –¥–ª—è —Ç–≤–æ–≥–æ —Å–∞–π—Ç—É.
üé® **CSS (Flexbox, Grid)** ‚Äî —Å—Ç–∏–ª—å–Ω—ñ, —Ä–µ—Å–ø–æ–Ω—Å–∏–≤–Ω—ñ –º–∞–∫–µ—Ç–∏, —â–æ —ñ–¥–µ–∞–ª—å–Ω–æ –≤–∏–≥–ª—è–¥–∞—é—Ç—å –Ω–∞ –±—É–¥—å-—è–∫–æ–º—É –ø—Ä–∏—Å—Ç—Ä–æ—ó.
‚ö° **JavaScript** ‚Äî –¥–∏–Ω–∞–º—ñ—á–Ω–∞ —ñ–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ñ—Å—Ç—å: –≤—ñ–¥ –ø–ª–∞–≤–Ω–∏—Ö –∞–Ω—ñ–º–∞—Ü—ñ–π –¥–æ –ø–æ—Ç—É–∂–Ω–∏—Ö –≤–µ–±-–¥–æ–¥–∞—Ç–∫—ñ–≤.

üí° **–ß–æ–º—É –æ–±—Ä–∞—Ç–∏ –º–µ–Ω–µ?**
- –Ü–Ω–¥–∏–≤—ñ–¥—É–∞–ª—å–Ω–∏–π –ø—ñ–¥—Ö—ñ–¥ –¥–æ –∫–æ–∂–Ω–æ–≥–æ –ø—Ä–æ—î–∫—Ç—É.
- –°—É—á–∞—Å–Ω—ñ —Ç–µ—Ö–Ω–æ–ª–æ–≥—ñ—ó –¥–ª—è —à–≤–∏–¥–∫–æ—Å—Ç—ñ, SEO —Ç–∞ –∫–æ–º—Ñ–æ—Ä—Ç—É –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤.
- –†—ñ—à–µ–Ω–Ω—è, —è–∫—ñ –ø—ñ–¥–Ω—ñ–º—É—Ç—å —Ç–≤—ñ–π –±—ñ–∑–Ω–µ—Å –∞–±–æ –æ—Å–æ–±–∏—Å—Ç–∏–π –±—Ä–µ–Ω–¥.
- –®–≤–∏–¥–∫–∞ –∫–æ–º—É–Ω—ñ–∫–∞—Ü—ñ—è —Ç–∞ –ø—ñ–¥—Ç—Ä–∏–º–∫–∞ 24/7.

–ì–æ—Ç–æ–≤–∏–π –¥–æ —Å–∞–π—Ç—É, —è–∫–∏–π –≤—Ä–∞–∑–∏—Ç—å —Ç–≤–æ—ó—Ö –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤? –í—ñ–¥–≤—ñ–¥–∞–π https://mykyweb.com —ñ –Ω–∞–ø–∏—à–∏ –º–µ–Ω—ñ! üì© #WebDevelopment #MykyWeb

---

Looking for a modern, responsive, and interactive website? My bot‚Äôs got you covered! üöÄ

I‚Äôm MykyWEB, and I create web products that impress:
üåê **HTML** ‚Äî clean and semantic structure for your site.
üé® **CSS (Flexbox, Grid)** ‚Äî stylish, responsive layouts that look perfect on any device.
‚ö° **JavaScript** ‚Äî dynamic interactivity, from smooth animations to powerful web apps.

üí° **Why choose me?**
- Tailored approach to every project.
- Cutting-edge tech for speed, SEO, and user comfort.
- Solutions to elevate your business or personal brand.
- Fast communication and 24/7 support.

Ready for a website that wows your users? Visit https://mykyweb.com and drop me a message! üì© #WebDevelopment #MykyWeb

---

Hled√°te modern√≠, responzivn√≠ a interaktivn√≠ web? M≈Øj bot v√°m pom≈Ø≈æe! üöÄ

Jsem MykyWEB a tvo≈ô√≠m webov√© produkty, kter√© ohrom√≠:
üåê **HTML** ‚Äî ƒçist√° a s√©mantick√° struktura pro v√°≈° web.
üé® **CSS (Flexbox, Grid)** ‚Äî stylov√©, responzivn√≠ rozvr≈æen√≠, kter√© vypad√° skvƒõle na ka≈æd√©m za≈ô√≠zen√≠.
‚ö° **JavaScript** ‚Äî dynamick√° interaktivita, od plynul√Ωch animac√≠ po v√Ωkonn√© webov√© aplikace.

üí° **Proƒç si vybrat mƒõ?**
- Individu√°ln√≠ p≈ô√≠stup ke ka≈æd√©mu projektu.
- Modern√≠ technologie pro rychlost, SEO a pohodl√≠ u≈æivatel≈Ø.
- ≈òe≈°en√≠, kter√° posunou v√°≈° byznys nebo osobn√≠ znaƒçku na novou √∫rove≈à.
- Rychl√° komunikace a podpora 24/7.

P≈ôipraveni na web, kter√Ω okouzl√≠ va≈°e u≈æivatele? Nav≈°tivte https://mykyweb.com a napi≈°te mi! üì© #WebDevelopment #MykyWeb"""

# –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –æ–±—Ä–æ–±–∫–∏ –¥–≤–æ—Ñ–∞–∫—Ç–æ—Ä–Ω–æ—ó –∞–≤—Ç–µ–Ω—Ç–∏—Ñ—ñ–∫–∞—Ü—ñ—ó
def login_with_2fa():
    session_file = "session.json"
    try:
        if os.path.exists(session_file):
            cl.load_settings(session_file)
            cl.login("myky_web", "PANKROCK1")
            logger.info("–£—Å–ø—ñ—à–Ω–∏–π –≤—Ö—ñ–¥ —ñ–∑ –∑–±–µ—Ä–µ–∂–µ–Ω–æ—ó —Å–µ—Å—ñ—ó")
        else:
            cl.login("myky_web", "PANKROCK1")
            cl.dump_settings(session_file)
            logger.info("–£—Å–ø—ñ—à–Ω–∏–π –≤—Ö—ñ–¥, —Å–µ—Å—ñ—é –∑–±–µ—Ä–µ–∂–µ–Ω–æ")
    except Exception as e:
        if "Two-factor authentication required" in str(e):
            logger.info("–ü–æ—Ç—Ä—ñ–±–Ω–∞ –¥–≤–æ—Ñ–∞–∫—Ç–æ—Ä–Ω–∞ –∞–≤—Ç–µ–Ω—Ç–∏—Ñ—ñ–∫–∞—Ü—ñ—è")
            verification_code = input("–í–≤–µ–¥—ñ—Ç—å –∫–æ–¥ 2FA (–æ—Ç—Ä–∏–º–∞–Ω–∏–π —á–µ—Ä–µ–∑ SMS, email –∞–±–æ –¥–æ–¥–∞—Ç–æ–∫): ")
            try:
                cl.login("myky_web", "PANKROCK1", verification_code=verification_code)
                cl.dump_settings(session_file)
                logger.info("–£—Å–ø—ñ—à–Ω–∏–π –≤—Ö—ñ–¥ —ñ–∑ 2FA, —Å–µ—Å—ñ—é –∑–±–µ—Ä–µ–∂–µ–Ω–æ")
            except Exception as e:
                logger.error(f"–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –≤—Ö–æ–¥—ñ –∑ 2FA: {e}")
                raise
        else:
            logger.error(f"–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –≤—Ö–æ–¥—ñ: {e}")
            raise

# –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –Ω–∞–¥—Å–∏–ª–∞–Ω–Ω—è –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
def send_message(user_id, message):
    try:
        cl.direct_send(message, [user_id])
        logger.info(f"–ü–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –Ω–∞–¥—ñ—Å–ª–∞–Ω–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—É {user_id}")
        return True
    except Exception as e:
        logger.error(f"–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –Ω–∞–¥—Å–∏–ª–∞–Ω–Ω—ñ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è {user_id}: {e}")
        return False

# –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ –Ω–æ–≤–∏—Ö –ø—ñ–¥–ø–∏—Å–Ω–∏–∫—ñ–≤
def check_new_followers(processed_followers):
    try:
        followers = cl.user_followers(cl.user_id)
        for follower in followers.values():
            if follower.pk not in processed_followers:
                if send_message(follower.pk, MESSAGE):
                    processed_followers.add(follower.pk)
                    time.sleep(10)  # –ó–±—ñ–ª—å—à–µ–Ω–∞ –∑–∞—Ç—Ä–∏–º–∫–∞
    except Exception as e:
        logger.error(f"–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –ø–µ—Ä–µ–≤—ñ—Ä—Ü—ñ –ø—ñ–¥–ø–∏—Å–Ω–∏–∫—ñ–≤: {e}")

# –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ –ª–∞–π–∫—ñ–≤ –Ω–∞ –ø–æ—Å—Ç–∞—Ö
def check_likes(processed_likers):
    try:
        posts = cl.user_medias(cl.user_id, amount=5)  # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –æ—Å—Ç–∞–Ω–Ω—ñ 5 –ø–æ—Å—Ç—ñ–≤
        for post in posts:
            try:
                likers = cl.media_likers(post.id)
                for liker in likers:
                    if liker.pk not in processed_likers:
                        if send_message(liker.pk, MESSAGE):
                            processed_likers.add(liker.pk)
                            time.sleep(10)  # –ó–±—ñ–ª—å—à–µ–Ω–∞ –∑–∞—Ç—Ä–∏–º–∫–∞
            except Exception as e:
                logger.error(f"–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –ø–µ—Ä–µ–≤—ñ—Ä—Ü—ñ –ª–∞–π–∫—ñ–≤ –¥–ª—è –ø–æ—Å—Ç–∞ {post.id}: {e}")
    except Exception as e:
        logger.error(f"–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –æ—Ç—Ä–∏–º–∞–Ω–Ω—ñ –ø–æ—Å—Ç—ñ–≤: {e}")

# –û—Å–Ω–æ–≤–Ω–∏–π —Ü–∏–∫–ª –±–æ—Ç–∞
def main():
    logger.info("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω–æ...")
    processed_followers, processed_likers = load_processed_users()
    
    try:
        login_with_2fa()
        while True:
            try:
                check_new_followers(processed_followers)
                check_likes(processed_likers)
                save_processed_users(processed_followers, processed_likers)
                logger.info("–û—á—ñ–∫—É–≤–∞–Ω–Ω—è –Ω–∞—Å—Ç—É–ø–Ω–æ—ó –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏...")
                time.sleep(600)  # –ó–±—ñ–ª—å—à–µ–Ω–æ –¥–æ 10 —Ö–≤–∏–ª–∏–Ω
            except KeyboardInterrupt:
                logger.info("–ë–æ—Ç –∑—É–ø–∏–Ω–µ–Ω–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–µ–º")
                save_processed_users(processed_followers, processed_likers)
                break
            except Exception as e:
                logger.error(f"–ü–æ–º–∏–ª–∫–∞ –≤ –æ—Å–Ω–æ–≤–Ω–æ–º—É —Ü–∏–∫–ª—ñ: {e}")
                time.sleep(1800)  # –ó–∞—Ç—Ä–∏–º–∫–∞ 30 —Ö–≤–∏–ª–∏–Ω –ø—Ä–∏ –ø–æ–º–∏–ª—Ü—ñ
    except Exception as e:
        logger.error(f"–ö—Ä–∏—Ç–∏—á–Ω–∞ –ø–æ–º–∏–ª–∫–∞: {e}")
        save_processed_users(processed_followers, processed_likers)

if __name__ == "__main__":
    main()